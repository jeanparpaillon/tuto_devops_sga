1. Versioning ete GitHub
1.1. Introduction
1.1.1. Concepts de base
1.1.2. Importance du Versioning
1.1.3. Outils populaires
1.2. git
1.2.1 - Commandes de base locales
1.2.1.1. git init
1.2.1.2. git add
1.2.1.3. git commit
1.2.2. Commandes distantes
1.2.2.1. git push
1.2.2.2. git pull
1.2.2.3. git clone
1.3. GitHub
1.3.1. Création de dépôt
1.3.2. Gestion des branches
1.3.3. Pull Requests
1.3.4. Code Review
1.4. Collaboration avec GitHub
1.4.1. Issues
1.4.2. Projects
1.4.3. Wikis
1.5. Exercices
1.5.1. Création d'un projet collaboratif
1.5.2. Gestion de conflits de fusion
2. Intégration continue (CI) avec GitHub Actions
2.1. Introduction CI
2.1.1. Concepts de base
2.1.2. Avantages
2.2. Configuration GitHub Actions
2.2.1. Création d'un workflow
2.2.2. Déclencheurs
2.2.3. Actions
2.3. Automatisation des tests
2.4. Personnalisation des workflows
2.4.1. Utilisation des conditions
2.4.2. Personnalisation des conteneurs
2.4.3. Création d'actions personnalisées
2.5. Déploiement continu (CD)
2.5.1. Configuration des pipelines de déploiement
2.5.2. Tests en environnement de production
2.6. Exercices
2.6.1. Mise en place d'un pipeline CI/CD complet
2.6.2. Tests et déploiements automatiques
3. Artifactory, prise en main
3.1. Introduction
3.1.1. Présentation du production
3.1.2. Gestion des artefacts et dépendances
3.2. Installation et configuration
3.2.1. Installation
3.2.2. Configuration initiale
3.2.3. Accès à l'interface utilisateur
3.3. Interface utilisateur
3.3.1. Exploration de l'UI
3.3.2. Recherche des artefacts
3.3.3. Gestion des artefacts
3.4. Gestion des dépôts
3.4.1. Dépôt NuGet
3.4.2. Dépôt NPM
3.5. Utilisation de XRAY
3.5.1. Accès aux artefacts via XRAY
3.5.2. Téléchargement des artefacts
3.6. Exercices
3.6.1. Création d'un dépôt NuGet
3.6.2. Ajout des artefacts
3.6.3. Gestion des artefacts
4. Configuration et Automatisation
4.1. Configuration avancée
4.1.1. Paramètres base de données
4.1.2. Stockage basé sur des checksums
4.1.3. Configuration des serveurs de fichiers
4.2. Gestion des utilisateurs et permissions
4.2.1. Création d'utilisateurs
4.2.2. Attribution des permissions
4.2.3. Gestion des groupes
4.3. Intégration CI/CD
4.3.1. Configuration des pipelines
4.3.2. Intégration GitHub Actions
4.4. Automatisation des flux de travail
4.4.1. Création de workflows
4.4.2. Automatisation des tests
4.4.3. Automatisation des déploiements
4.5. Exercices
4.5.1. Création d'un pipeline CI/CD complet
4.5.2. Tests automatiques
4.5.3. Déploiements automatiques
4.6. Sécurisation de l'infrastructure
4.6.1. Configuration des règles de sécurité
4.6.2. Gestion des secrets
4.6.3. Durcissement des configurations
5. Configuration avancée
5.1. Optimisation des performances
5.1.1. Techniques d'optimisation
5.1.2. Amélioration des performances
5.2. Analyse et reporting
5.2.1. Outils de reporting
5.2.2. Analyse des performances
5.2.3. Analyse des utilisations
5.3. Mises à jour et maintenance
5.3.1. Processus de mises à jour
5.3.2. Gestion des correctifs
5.3.3. Gestion des versions
5.4. Cas d'utilisation avancés
5.4.1. Études de cas
5.4.2. Scénarios avancés
5.4.3. Mise en œuvre
